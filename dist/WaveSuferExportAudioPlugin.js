!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.WaveSuferExportAudioPlugin=t():e.WaveSuferExportAudioPlugin=t()}(self,(function(){return(()=>{"use strict";var e={854:(e,t,r)=>{r.r(t),r.d(t,{default:()=>n});class n{static create(e){return{name:"exportAudioPlugin",deferInit:!(!e||!e.deferInit)&&e.deferInit,params:e,staticProps:{getRenderedAudioBuffer(){return this.initialisedPluginList.exportAudioPlugin||this.initPlugin("exportAudioPlugin"),this.exportAudioPlugin.getRenderedAudioBuffer()}},instance:n}}constructor(e,t){this.params=e,this.wavesurfer=t}getRenderedAudioBuffer(){return new Promise(((e,t)=>{const r=this.wavesurfer.getPlaybackRate();var{length:n,numberOfChannels:o,sampleRate:i}=this.wavesurfer.backend.buffer;const u=new OfflineAudioContext({length:n/r,numberOfChannels:o,sampleRate:i});var a=u.createBufferSource();a.buffer=this.wavesurfer.backend.buffer,a.playbackRate.value=r;const f=this.wavesurfer.getFilters().filter((e=>e instanceof BiquadFilterNode));if(f.length)for(const e of f){const t=u.createBiquadFilter();t.type=e.type,t.frequency.value=e.frequency.value,t.Q.value=e.Q.value,a.connect(t),t.connect(u.destination)}else a.connect(u.destination);a.start(),u.oncomplete=t=>{e(t.renderedBuffer)},u.startRendering().catch(t)}))}init(){}destroy(){}}}},t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={exports:{}};return e[n](o,o.exports,r),o.exports}return r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r(854)})()}));